{"version":3,"sources":["components/typedComponent/typedComponent.js","components/socialButtons/socialButtons.js","components/header/header.js","containers/page/Page.js","containers/App.js","serviceWorker.js","index.js"],"names":["typed","props","react_default","a","createElement","className","react_typed_default","strings","typeSpeed","backSpeed","loop","SocialButtons","Fragment","href","target","React","Component","header","typedComponent","socialButtons","Page","components_header_header","App","page_Page","Boolean","window","location","hostname","match","ReactDOM","render","containers_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wPA6BeA,EA1BD,SAACC,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACVH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACII,QAAS,CAAC,6BACVC,UAAW,GACXH,UAAU,0BAEdH,EAAAC,EAAAC,cAAA,WAEAF,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CACII,QAAS,CAAC,6BACN,qBACA,wBACJC,UAAW,IACXC,UAAW,GACXJ,UAAU,uBACVK,MAAI,OCWTC,mLA3BP,OACIT,EAAAC,EAAAC,cAACF,EAAAC,EAAMS,SAAP,KACIV,EAAAC,EAAAC,cAAA,KAAGS,KAAI,yCAA4CR,UAAS,SAAYS,OAAM,UAC1EZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,yBAEJF,EAAAC,EAAAC,cAAA,KAAGS,KAAI,+BAAkCR,UAAS,SAAYS,OAAM,UAChEZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,uBAEJF,EAAAC,EAAAC,cAAA,KAAGS,KAAI,oCAAuCR,UAAS,SAAYS,OAAM,UACrEZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACbH,EAAAC,EAAAC,cAAA,qBAEJF,EAAAC,EAAAC,cAAA,KAAGS,KAAI,IAAOR,UAAS,UACnBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cACbH,EAAAC,EAAAC,cAAA,sBAEJF,EAAAC,EAAAC,cAAA,KAAGS,KAAI,4EAA+ER,UAAS,SAAYS,OAAM,UAC7GZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,+BAvBQW,IAAMC,WC8BnBC,EA5BA,SAAChB,GACZ,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAMS,SAAP,KACIV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAf,QAEAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAEXH,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,wBAKRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,MAEAjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBCZhBe,mLAPP,OACIlB,EAAAC,EAAAC,cAACF,EAAAC,EAAMS,SAAP,KACIV,EAAAC,EAAAC,cAACiB,EAAD,cAJGN,IAAMC,WCSVM,mLANX,OACEpB,EAAAC,EAAAC,cAACmB,EAAD,aAHYP,aCQEQ,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OAAO5B,EAAAC,EAAAC,cAAE2B,EAAF,MAAUC,SAASC,eAAe,SD4H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.868e3b4f.chunk.js","sourcesContent":["import React from 'react';\r\nimport Typed from 'react-typed';\r\n\r\nconst typed = (props) => {\r\n    return (\r\n        <div className=\"header__intro-box\">\r\n            <h1 className=\"heading-primary\">\r\n                <Typed\r\n                    strings={['Hi, I\\'m Cozy ðŸ‘½']}\r\n                    typeSpeed={30}\r\n                    className=\"heading-primary--main\"\r\n                />\r\n                <br />\r\n\r\n                <Typed\r\n                    strings={['I\\'m a full-stack developer',\r\n                        'I do full-stack JS',\r\n                        'I do Python Backends']}\r\n                    typeSpeed={100}\r\n                    backSpeed={80}\r\n                    className=\"heading-primary--sub\"\r\n                    loop >\r\n                </Typed>\r\n            </h1>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default typed;\r\n","import React from 'react';\r\n\r\nclass SocialButtons extends React.Component {\r\n    render() {\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <a href={`https://linkedin.com/in/cosmasgikunju/`} className={`action`} target={`_blank`}>\r\n                    <i className=\"fab fa-linkedin-in\"></i>\r\n                    <span>LinkedIn</span>\r\n                </a>\r\n                <a href={`https://github.com/ItsCosmas`} className={`action`} target={`_blank`}>\r\n                    <i className=\"fab fa-github\"></i>\r\n                    <span>Github</span>\r\n                </a>\r\n                <a href={`https://medium.com/@gikunjucosmas`} className={`action`} target={`_blank`}>\r\n                    <i className=\"fab fa-medium-m\"></i>\r\n                    <span>Blog</span>\r\n                </a>\r\n                <a href={`#`} className={`action`} >\r\n                    <i className=\"fas fa-at\"></i>\r\n                    <span>Email</span>\r\n                </a>\r\n                <a href={`https://s3.amazonaws.com/raymond-jay-portfolio/johnson_raymond_resume.pdf`} className={`action`} target={`_blank`}>\r\n                    <i className=\"fas fa-newspaper\"></i>\r\n                    <span>Resume</span>\r\n                </a>\r\n            </React.Fragment>\r\n        );\r\n\r\n    }\r\n}\r\nexport default SocialButtons;","import React from 'react';\r\nimport Typed from '../typedComponent/typedComponent';\r\nimport Social from '../socialButtons/socialButtons';\r\n\r\nconst header = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"navbar\">\r\n                <div className=\"navbar__logo-name\">Cozy</div>\r\n\r\n                <nav className=\"navbar__items\">\r\n\r\n                    <div>Skills</div>\r\n                    <div>About</div>\r\n                    <div>Projects</div>\r\n                    <div>Contact</div>\r\n\r\n                </nav>\r\n            </div>\r\n\r\n            <div className=\"header\">\r\n                <Typed />\r\n                <Social />\r\n\r\n                <div className=\"header__actions\">\r\n                    {/* <ContactButtons /> */}\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n};\r\n\r\nexport default header;","import React from 'react';\nimport Header from '../../components/header/header';\n\nclass Page extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <Header />\n            </React.Fragment>\n        )\n    }\n}\nexport default Page;","import React, { Component } from 'react';\nimport '../styles/index.scss';\nimport Page from './page/Page';\n\nclass App extends Component {\n  render() {\n    return (\n      <Page />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(< App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}